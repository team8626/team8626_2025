@startuml
class CS_SubsystemBase {
    +CS_periodic(): void
    +initDashboard(): void
    +updateDashboard(): void
}

class CoralShooterSubsystem {
    -coralShooterInterface: CoralShooterInterface
    -values: CoralShooterValues
    -desiredRPM: number
    -desiredLauncherSetpoint: number
    +startRampUp(): void
    +startShooter(newRPM: number): void
    +setShooterRPM(newRPM: number): void
    +startIntake(): void
    +stopShooter(): void
    +stopLauncher(): void
    +updateDashboard(): void
}

class CoralShooterInterface {
    +startShooter(newRPM: number): void
    +updateShooterRPM(newRPM: number): void
    +stopShooter(): void
    +startLauncher(newSetpoint: number): void
    +stopLauncher(): void
    +getShooterRPMLeft(): number
    +getShooterRPMRight(): number
    +shooterIsLoaded(): boolean
}

class CoralShooter_SparkMax {
    -leftMotor: SparkMax
    -rightMotor: SparkMax
    -launchMotor: SparkMax
    +updateInputs(values: CoralShooterValues): void
    +startShooter(newRPM: number): void
    +stopShooter(): void
}

class CoralShooter_Sim {
    -leftSim: FlywheelSim
    -rightSim: FlywheelSim
    -launchSim: FlywheelSim
    +startShooter(newRPM: number): void
    +stopShooter(): void
    +updateInputs(values: CoralShooterValues): void
}

class CoralShooterConstants {
    +shootRPM: number
    +intakeRPM: number
    +launcherShootSetpoint: number
    +gains: { kP: () => number, kI: () => number, kD: () => number }
    +flywheelConfig: { reduction: number, momentOfInertia: number }
}

class CoralShooterValues {
    +launchIsEnabled: boolean
    +shooterIsEnabled: boolean
    +currentRPMLeft: number
    +currentRPMRight: number
    +currentRMPLauncher: number
    +currentLauncherSetpoint: number
    +ampsLeft: number
    +ampsRight: number
    +ampsLauncher: number
}

class CS_Utils {
    +updateFromSmartDashboard(newValue: number, currentValue: number, callback: (value: number) => void): number
}

CS_SubsystemBase <|-- CoralShooterSubsystem
CoralShooterSubsystem --> CoralShooterInterface
CoralShooterSubsystem ..> CoralShooterValues
CoralShooterSubsystem ..> CoralShooterConstants
CoralShooter_SparkMax ..> CoralShooterValues
CoralShooter_Sim ..> CoralShooterValues
CoralShooter_SparkMax --> CoralShooterInterface
CoralShooter_Sim --> CoralShooterInterface
CS_Utils ..> CoralShooterSubsystem
@enduml
